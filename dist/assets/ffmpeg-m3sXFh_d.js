var s;(function(r){r.LOAD="LOAD",r.EXEC="EXEC",r.FFPROBE="FFPROBE",r.WRITE_FILE="WRITE_FILE",r.READ_FILE="READ_FILE",r.DELETE_FILE="DELETE_FILE",r.RENAME="RENAME",r.CREATE_DIR="CREATE_DIR",r.LIST_DIR="LIST_DIR",r.DELETE_DIR="DELETE_DIR",r.ERROR="ERROR",r.DOWNLOAD="DOWNLOAD",r.PROGRESS="PROGRESS",r.LOG="LOG",r.MOUNT="MOUNT",r.UNMOUNT="UNMOUNT"})(s||(s={}));const O=(()=>{let r=0;return()=>r++})(),D=new Error("ffmpeg is not loaded, call `await ffmpeg.load()` first"),u=new Error("called FFmpeg.terminate()");class N{#e=null;#a={};#r={};#s=[];#n=[];loaded=!1;#o=()=>{this.#e&&(this.#e.onmessage=({data:{id:t,type:e,data:a}})=>{switch(e){case s.LOAD:this.loaded=!0,this.#a[t](a);break;case s.MOUNT:case s.UNMOUNT:case s.EXEC:case s.FFPROBE:case s.WRITE_FILE:case s.READ_FILE:case s.DELETE_FILE:case s.RENAME:case s.CREATE_DIR:case s.LIST_DIR:case s.DELETE_DIR:this.#a[t](a);break;case s.LOG:this.#s.forEach(n=>n(a));break;case s.PROGRESS:this.#n.forEach(n=>n(a));break;case s.ERROR:this.#r[t](a);break}delete this.#a[t],delete this.#r[t]})};#t=({type:t,data:e},a=[],n)=>this.#e?new Promise((i,d)=>{const o=O();this.#e&&this.#e.postMessage({id:o,type:t,data:e},a),this.#a[o]=i,this.#r[o]=d,n?.addEventListener("abort",()=>{d(new DOMException(`Message # ${o} was aborted`,"AbortError"))},{once:!0})}):Promise.reject(D);on(t,e){t==="log"?this.#s.push(e):t==="progress"&&this.#n.push(e)}off(t,e){t==="log"?this.#s=this.#s.filter(a=>a!==e):t==="progress"&&(this.#n=this.#n.filter(a=>a!==e))}load=({classWorkerURL:t,...e}={},{signal:a}={})=>(this.#e||(this.#e=t?new Worker(new URL(t,import.meta.url),{type:"module"}):new Worker(new URL("/assets/worker-BAOIWoxA.js",import.meta.url),{type:"module"}),this.#o()),this.#t({type:s.LOAD,data:e},void 0,a));exec=(t,e=-1,{signal:a}={})=>this.#t({type:s.EXEC,data:{args:t,timeout:e}},void 0,a);ffprobe=(t,e=-1,{signal:a}={})=>this.#t({type:s.FFPROBE,data:{args:t,timeout:e}},void 0,a);terminate=()=>{const t=Object.keys(this.#r);for(const e of t)this.#r[e](u),delete this.#r[e],delete this.#a[e];this.#e&&(this.#e.terminate(),this.#e=null,this.loaded=!1)};writeFile=(t,e,{signal:a}={})=>{const n=[];return e instanceof Uint8Array&&n.push(e.buffer),this.#t({type:s.WRITE_FILE,data:{path:t,data:e}},n,a)};mount=(t,e,a)=>{const n=[];return this.#t({type:s.MOUNT,data:{fsType:t,options:e,mountPoint:a}},n)};unmount=t=>{const e=[];return this.#t({type:s.UNMOUNT,data:{mountPoint:t}},e)};readFile=(t,e="binary",{signal:a}={})=>this.#t({type:s.READ_FILE,data:{path:t,encoding:e}},void 0,a);deleteFile=(t,{signal:e}={})=>this.#t({type:s.DELETE_FILE,data:{path:t}},void 0,e);rename=(t,e,{signal:a}={})=>this.#t({type:s.RENAME,data:{oldPath:t,newPath:e}},void 0,a);createDir=(t,{signal:e}={})=>this.#t({type:s.CREATE_DIR,data:{path:t}},void 0,e);listDir=(t,{signal:e}={})=>this.#t({type:s.LIST_DIR,data:{path:t}},void 0,e);deleteDir=(t,{signal:e}={})=>this.#t({type:s.DELETE_DIR,data:{path:t}},void 0,e)}var l;(function(r){r.MEMFS="MEMFS",r.NODEFS="NODEFS",r.NODERAWFS="NODERAWFS",r.IDBFS="IDBFS",r.WORKERFS="WORKERFS",r.PROXYFS="PROXYFS"})(l||(l={}));const L=new Error("failed to get response body reader"),w=new Error("failed to complete download"),I="Content-Length",A=r=>new Promise((t,e)=>{const a=new FileReader;a.onload=()=>{const{result:n}=a;n instanceof ArrayBuffer?t(new Uint8Array(n)):t(new Uint8Array)},a.onerror=n=>{e(Error(`File could not be read! Code=${n?.target?.error?.code||-1}`))},a.readAsArrayBuffer(r)}),b=async r=>{let t;if(typeof r=="string")/data:_data\/([a-zA-Z]*);base64,([^"]*)/.test(r)?t=atob(r.split(",")[1]).split("").map(e=>e.charCodeAt(0)):t=await(await fetch(r)).arrayBuffer();else if(r instanceof URL)t=await(await fetch(r)).arrayBuffer();else if(r instanceof File||r instanceof Blob)t=await A(r);else return new Uint8Array;return new Uint8Array(t)},_=async(r,t)=>{const e=await fetch(r);let a;try{const n=parseInt(e.headers.get(I)||"-1"),i=e.body?.getReader();if(!i)throw L;const d=[];let o=0;for(;;){const{done:E,value:R}=await i.read(),c=R?R.length:0;if(E){if(n!=-1&&n!==o)throw w;t&&t({url:r,total:n,received:o,delta:c,done:E});break}d.push(R),o+=c,t&&t({url:r,total:n,received:o,delta:c,done:E})}const f=new Uint8Array(o);let h=0;for(const E of d)f.set(E,h),h+=E.length;a=f.buffer}catch(n){console.log("failed to send download progress event: ",n),a=await e.arrayBuffer()}return a},m=async(r,t,e=!1,a)=>{const n=e?await _(r,a):await(await fetch(r)).arrayBuffer(),i=new Blob([n],{type:t});return URL.createObjectURL(i)};export{N as F,b as f,m as t};
